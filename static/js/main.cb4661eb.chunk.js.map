{"version":3,"sources":["App.js","Header.js","virus.svg","Countries.js","Philippines.js","serviceWorker.js","index.js"],"names":["App","basename","className","path","exact","component","Countries","Philippines","Component","hot","module","i","Header","useState","globalData","setGlobalData","setLoading","useEffect","fetchGlobalData","axios","get","res","data","setTimeout","src","logo","alt","href","cases","recovered","deaths","to","exports","coronaData","setCoronaData","searchTerm","setSearchTerm","isLoading","results","filter","v","country","toLowerCase","includes","toLocaleLowerCase","trim","fetchData","type","placeholder","value","onChange","event","target","map","key","todayCases","todayDeaths","active","critical","casesPerOneMillion","props","activeTab","setActiveTab","setCases","modalData","setModalData","modal","setModal","toggleModal","toggle","tab","nationality","status","gender","had_recent_travel_history_abroad","hospital_admitted_to","fetchCases","isOpen","case_no","classnames","other_information","color","onClick","tabs","tabId","sm","item","age","toUpperCase","console","log","HandleModal","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb4661eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport Header from './Header'\nimport Countries from './Countries'\nimport Philippines from './Philippines'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <Header/>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Countries} />\n            <Route path=\"/ph\" exact component ={Philippines} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default hot(module)(App);","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logo from './virus.svg';\nimport './App.scss';\n\nconst Header = () => {\n  const [globalData, setGlobalData] = useState('')\n  const [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchGlobalData = async () => {\n      setLoading(true);\n      const res = await axios.get('https://coronavirus-19-api.herokuapp.com/all')\n      setGlobalData(res.data) \n      setLoading(false);\n    }\n\n    setTimeout(() => {\n      fetchGlobalData();\n    }, 1000);\n  }, [globalData])\n\n  return (\n    <header className=\"App-header\">\n      <nav className=\"navbar fixed-top navbar-light bg-light\">\n        <span className=\"navbar-brand mb-0 h1 d-flex align-items-center flex-wrap\">\n          <img src={logo} className=\"svg\" alt='logo'/>\n          COVID19 Count\n\n          <a href=\"https://github.com/Marianne00\" className=\"author-name\">Author: Marianne de Asis</a>\n        </span>\n          \n        {globalData ? \n          <div>\n            <div className=\"global-data-wrapper\">\n              <div>Global Data</div>\n              <div>Cases: {globalData.cases}</div>\n              <div>Recovered: {globalData.recovered}</div>\n              <div>Deaths: {globalData.deaths}</div>   \n            </div>\n            <div className=\"link-holder\">\n              <Link to=\"/\">Global</Link> <span className=\"delimiter\">|</span> <Link to=\"/ph\">Philippines in Detail</Link>\n            </div>\n          </div>\n        : 'Loading...'\n        }\n      </nav>\n    </header>\n  )\n}\n\nexport default Header","module.exports = __webpack_public_path__ + \"static/media/virus.d38ddfbd.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Countries = () => {\n  // const [lastChecked, setLastChecked] = useState('');\n  const [coronaData, setCoronaData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const results = !searchTerm\n  ? coronaData\n  : coronaData.filter(v =>\n      v.country.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim())\n    )\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://coronavirus-19-api.herokuapp.com/countries\");\n      setCoronaData(res.data);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n  \n  return (\n    <div className=\"container\">\n      <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={handleChange}\n          className=\"search-bar\"\n        />\n        {isLoading ? <p className=\"loading\">Loading...</p> : '' }\n        <div className=\"country-wrapper\">\n          {results ? \n            results.map((country, i) => {\n              return (\n                <div key={i} className=\"country-item\">\n                  <strong>{country.country}</strong>\n                  <p>Confirmed Cases: {country.cases} | Last Increase: {country.todayCases}</p>\n                  <p>Death/s: {country.deaths} | Today's deaths: {country.todayDeaths}</p>\n                  <p>Recovered: {country.recovered}</p>\n                  <p>Active: {country.active} | Critical: {country.critical}</p>\n                  <p>Cases per one million: {country.casesPerOneMillion}</p>\n                </div>\n              )\n            }) : 'Loading...'\n          }\n        </div>\n    </div>\n  );\n}\n\nexport default Countries;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport classnames from 'classnames';\n\n\nexport const Philippines = (props) => {\n  const [activeTab, setActiveTab] = useState('1');\n  const [cases, setCases] = useState([]);\n  const [modalData, setModalData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [isLoading, setLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const toggleModal = () =>  setModal(!modal);\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const results = !searchTerm\n  ? cases\n  : cases.filter(v =>\n      v.nationality.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim()) ||\n      v.status.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim()) ||\n      v.gender.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim()) || \n      v.had_recent_travel_history_abroad.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim()) ||\n      v.hospital_admitted_to.toLowerCase().includes(searchTerm.toLocaleLowerCase().trim()) \n    )\n\n  useEffect(() => {\n    const fetchCases = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://coronavirus-ph-api.now.sh/cases\");\n      setCases(res.data);\n      setLoading(false);\n    }\n\n    setTimeout(() => {\n      fetchCases();\n    }, 1000);\n  }, [])\n\n  const HandleModal = (item) => {\n    setTimeout(() => {\n      setModalData(item);\n      console.log(modalData);\n      toggleModal();\n    }, 100)\n\n    console.log(modalData.case_no)\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-5\">Philippines</h1>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader>\n          <div>\n            Case no: PH {modalData.case_no}\n          </div>\n          <div\n            className={classnames(\"status-badge\", {\n              \"recover\": modalData.status === 'Recovered',\n              \"died\": modalData.status === 'Died',\n              \"admitted\": modalData.status === 'Admitted',\n            })}\n          >{modalData.status}</div>\n        \n        </ModalHeader>\n        <ModalBody>\n          <p>Nationality: {modalData.nationality}</p>\n          <p>Gender: {modalData.gender}</p>\n          <p>Hospital admitted to: {modalData.hospital_admitted_to}</p>\n          <p>Travel History From Abroad: {modalData.had_recent_travel_history_abroad}</p>\n          <div className=\"other-info\">\n            <p>Other Info</p>\n            <p>{modalData.other_information}</p>\n          </div>\n          <ModalFooter>\n            <Button color=\"danger\" onClick={toggleModal}>Close</Button>\n          </ModalFooter>\n        </ModalBody>\n      </Modal> \n\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n          >\n            Cases\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle('2'); }}\n          >\n            Lockdowns\n          </NavLink>\n        </NavItem>\n      </Nav>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={searchTerm}\n                onChange={handleChange}\n                className=\"search-bar\"\n              />\n              {isLoading ? <p className=\"loading\">Loading...</p> : \n              <div className=\"case-wrapper\">\n                <div className=\"top-row\">\n                  <div>Case/Age/Sex</div>\n                  <div>Nationality</div>\n                  <div>Status</div>\n                  <div>Travel History</div>\n                  {/* <div>Since</div> */}\n                  <div>Actions</div>\n                </div>\n                { results ?\n                  results.map((item, i) => {\n                    return (\n                      <div key={i} className=\"case-item\">\n                        <div>\n                          <p> <span className=\"hide-desktop\"> Case No: </span>Philippine {item.case_no}</p>  \n                          <p><span className=\"hide-desktop\">Gender/Age:&nbsp;\n                          \n                          </span>{item.gender} | {item.age} years old</p>\n                        </div>\n                        <div>\n                          <p><span className=\"hide-desktop nationality\">Nationality: </span> {item.nationality}</p>\n                        </div>\n                        <div\n                          className={classnames(\"status-badge hide-mobile\", {\n                            \"recover\": item.status === 'Recovered',\n                            \"died\": item.status === 'Died',\n                            \"admitted\": item.status === 'Admitted',\n                          })}\n                        >\n                          {item.status}\n                        </div>\n                        <div className={classnames('travel-history hide-mobile', {\n                          \"yes\" : item.had_recent_travel_history_abroad === 'Yes',\n                          \"no\": item.had_recent_travel_history_abroad === 'No'\n                        })}> \n                          {item.had_recent_travel_history_abroad.toUpperCase()}\n                        </div>\n                        <div>\n                          <Button color=\"primary\" onClick={() => HandleModal(item)}>More Info</Button>\n                        </div>\n                      </div>\n                    )\n                  }) : ''\n                }\n              </div>\n              }\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            <h1 className=\"d-flex justify-content-center mt-5 mx-auto\">Soon...</h1>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  )\n}\n\nexport default Philippines","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}